services:
  api:
    build:
      context: ../../
      dockerfile: src/Dockerfile
    ports:
      - "${API_INNER_PORT}:${API_INNER_PORT}"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - nw

  database:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${OUTER_POSTGRES_PORT}:${INNER_POSTGRES_PORT}"
    volumes:
      - ai_postgres_data:/var/lib/postgresql/data
    networks:
      - nw
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 3s
      timeout: 1s
      retries: 5

  cache:
    image: redis:7-alpine
    ports:
      - "${OUTER_REDIS_PORT}:${INNER_REDIS_PORT}"
    networks:
      - nw
    volumes:
      - ai_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  ai_postgres_data:
    driver: local
  ai_redis_data:
    driver: local

networks:
  nw:
    driver: bridge
